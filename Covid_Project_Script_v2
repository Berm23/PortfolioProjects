select *
from CovidDeaths	
where continent is not NULL 
order by 3,4

--Select Data that we are going to be using
select location, date, total_cases, new_cases, total_deaths, population
from CovidDeaths
where continent is not NULL 
order by 2,1

-- Looking at total cases vs total deaths
-- Shows likelihood of dying if you contract covid in your country
select location, 
date, 
total_cases, 
total_deaths, 
(total_deaths/total_cases)*100 as death_percentage from CovidDeaths
where location like '%state%'
order by 1,2


-- Looking at Total Cases vs Population
-- Shows what percentage of population got covid.
select location, 
date, 
total_cases, 
population , 
(total_cases /population)*100 as PercentPopulationInfected
from CovidDeaths cd 
where location like '%state%'
order by 1,2


-- Looking at Countries with highest infection rate compared to population
select location, 
population,
MAX(total_cases) as HighestInfectionCount,
MAX((total_cases/population))*100 as PercentPopulationInfected
from CovidDeaths cd 
--where location like '%state%'
where continent is not NULL 
Group by location, population 
order by PercentPopulationInfected desc;




-- LETS BREAK THINGS DOWN BY CONTINENT 
select continent, MAX(cast(total_deaths as int)) as TotalDeathCount
from CovidDeaths cd 
--where location like '%state%'
where continent is not NULL 
Group by continent 
order by TotalDeathCount desc;



-- LETS BREAK THINGS DOWN BY CONTINENT 
select continent, MAX(cast(total_deaths as int)) as TotalDeathCount
from CovidDeaths cd 
--where location like '%state%'
where continent is NULL 
Group by continent 
order by TotalDeathCount desc;



-- Showing Countries with highest death count per population
select location, 
MAX(cast(total_deaths as int)) as TotalDeathCount
from CovidDeaths cd
--where location like '%state%'
where continent is not NULL 
Group by location
order by TotalDeathCount desc


-- Global Numbers
select date, sum(new_cases)--, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
from CovidDeaths
--where location like '%states%'
where continent is not null
group by date
order by 1,2


select date, sum(new_cases), sum(cast(new_deaths as int))
from CovidDeaths
where continent is not null
group by date
order by 1,2


--Total global numbers for cases, deaths and death percentage grouped by date
select date, sum(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(cast
	(new_deaths as int))/sum(new_cases)*100 as DeathPercentage
from CovidDeaths
where continent is not null
group by date
order by 1,2


--Total global numbers for cases, deaths and death percentage over course of dataset
select sum(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(cast
	(new_deaths as int))/sum(new_cases)*100 as DeathPercentage
from CovidDeaths
where continent is not null
order by 1,2


--information from covidvaccinations dataset
select *
from CovidVaccinations


--join together both datasets coviddeaths and covidvaccinations by location and date.
select *
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date


--Looking at total population vs vaccinations
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.continent is not null
order by 1,2,3

--Looking at total population vs vaccinations with rolling count on vaccinations
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.continent is not null
order by 1,2,3



select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.continent is not null
order by 1,2,3

--Looking at total population vs vaccinations with rolling count on vaccinations with percentage vaccinated
--CTE
with PopVsVacc (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
as
(
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.continent is not null
--order by 2,3
)
select *, (RollingPeopleVaccinated/population)*100 as Percentage_Vaccinated
from PopVsVacc


--TEMP TABLE
drop table if exists  #PercentPopulationVaccinated
create table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime, 
Population numeric,
New_Vaccinations numeric,
RollingPeopleVaccinated numeric
)

insert into #PercentPopulationVaccinated
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
--where cd.continent is not null
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100 as PercentagePopVaccinated
from #PercentPopulationVaccinated


--TEMP TABLE #2
drop table if exists  #PercentPopulationVaccinated_USA
create table #PercentPopulationVaccinated_USA
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime, 
Population numeric,
New_Vaccinations numeric,
RollingPeopleVaccinated numeric
)

insert into #PercentPopulationVaccinated_USA
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.location like '%state%'
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100 as PercentagePopVaccinated
from #PercentPopulationVaccinated_USA


--creating a vew to store data for later visualizations

Create view PercentPopulationVaccinated as
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.continent is not null
--order by 2,3

select *
from PercentPopulationVaccinated



--creating a vew to store data for later visualizations

Create view PercentPopulationVaccinated_US as
select cd.continent, cd.location, cd.date, cd.population, cv.new_vaccinations
, sum(cv.new_vaccinations) over (partition by cd.location order by cd.location, cd.date) as RollingPeopleVaccinated
from CovidDeaths cd
join CovidVaccinations cv
	on cd.location = cv.location
	and cd.date = cv.date
where cd.location like '%state%'
--order by 2,3

select *
from PercentPopulationVaccinated_US
